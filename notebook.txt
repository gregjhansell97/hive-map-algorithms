
--------------------------------------------------------------------------------
3/15/2020 - Killington, VT - Meta-level

I want to log more information and thoughts via keyboard rather than notebook.
To that end, this log file will track all of these ideas/problems/issues that
I confront while making hive-map. Expect the format here with a data, location
and topic put in the header
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
3/15/2020 - Killington, VT - IPC

I wanted to get a transceivers to communicate over processes. I was planning on
using multiprocessing queues provided, but I want some added flexibility of
creating and removing more queues on the fly. It seems that these
multiprocessing qs must be created before processes are forked. I created a zmq
model where publishers push to a broker and then the broker publishes the
information to subscribers. I'm worried about he slow joiner problem but
optimistic that over ipc this isn't as much as a problem (as over tcp...)
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
3/15/2020 - Killington, VT - IPC

Man I forgot how annoying dealing with ZMQ contexts were, also the slow joiner
problem complicated my implementations. I found I was using sleeps and figured
that was not a good way to go about that, so went back on my implementation and
created inter-process-queues yet again. This time there is a factory object
called a broker that creates the transceivers, and once the broker starts up
no more transceivers can be made. This implementation is good enough to get
some benchmarks on (fingers crossed). I need to add hooks that track messages
sent
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
3/15/2020 - Killington, VT - Benchmark Transceiver

What do I want in a BenchmarkTransceiver (BT). The BT should be able to:
- monitor how many messages were sent and at what transmission intensity.
- verifying message success rate is not the job of the Transceiver
- the transceiver should be able to adjust its range of communication, 
- successful reception of a message adjustable probability
- highwater marks for both send and receive q's 
- broadcast delays
- change location (thereby connections)
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
3/16/2020 - Killington, VT - IPCTransceiver

I was optimistic in using transceivers over multiple process, but it would
appear that i/o is painfully slow with nodes over 500, and with nodes over 1000
there are os issues related to scaling. I switched over to threads, and that
brought a speed up, but still not perfect. I was doing some more research and I
think asyncio may be the right choice, especially if I remove the centralized
broker, and just provide queues directly to the components, this has the added
advantage of being in the same memory space (can check range before adding
values to the Q)
--------------------------------------------------------------------------------

